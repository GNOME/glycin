## 1.2.beta (2025-01-31)

This release contains the following new component versions:

- glycin-utils 3.0.0-beta
- glycin 2.1.0-beta
- libglycin 1.0.1-beta
- glycin-heif 1.2.0-beta
- glycin-image-rs 1.2.0-beta
- glycin-jxl 1.2.0-beta
- glycin-raw 1.2.0-beta
- glycin-svg 1.2.0-beta

### Fixed

- libglycin: Fix wrong g-i annotations for callbacks.

### Changed

- raw: Update to libopenraw 0.4.0-alpha.9 with Panasonic support

## 1.2.alpha.10 (2025-01-06)

This release contains the following new component versions:

- glycin-utils 3.0.0-alpha.1
- glycin 2.1.0-alpha.1
- libglycin 1.0.1-alpha.1
- libglycin-gtk4 1.0.1-alpha.1
- glycin-heif 1.2.0-alpha.1
- glycin-image-rs 1.2.0-alpha.1
- glycin-jxl 1.2.0-alpha.1
- glycin-raw 1.2.0-alpha.1
- glycin-svg 1.2.0-alpha.1

### Changed

- Depend on zbus 5 instead of zbus 4.

## 1.2.alpha (2025-01-03)

This release contains the following new component versions:

- glycin-utils 3.0.0-alpha
- glycin 2.1.0-alpha
- glycin-heif 1.2.0-alpha
- glycin-image-rs 1.2.0-alpha
- glycin-jxl 1.2.0-alpha
- glycin-raw 1.2.0-alpha
- glycin-svg 1.2.0-alpha

### Added

- By using gufo, XMP data are now provided for JPEGs.
- Support the eXIf chunk for Exif metadata in PNGs.
- glycin: API to list available editors with their supported operations.
- image-rs/jpeg: Support for crop and flip in image editing.
- image-rs/png: CICP support (variant of HDR content)
- image-rs/png: Editing support for PNGs with crop, rotate, flip.

### Changed

- Repository location is now `GNOME/glycin` on GNOME GitLab.
- glycin: Images with an ICC color profile are now passed in Rec. 2020 linear
  color space to GTK, supporting a far wider color gamut than the sRGB format
  before

## 1.1.4 (2024-01-03)

This release contains the following new component versions:

- libglycin 1.0.0
- libglycin-gtk4 1.0.0

### Fixed

- image-rs: Support `image/qoi` mime-type for QOI in addition to `image/x-qoi`.
- libglycin: Include stdint.h.
- libglycin: Remove dependency on gtk in header and move it to libglycin-gtk4.

## 1.1.2 (2024-11-22)

### Added

- Output loader output as debug messages. The loader output is captured and
  added to errors. But it's not accessible if the loader doesn't return. In that
  case, this feature is useful.

### Fixed

- Fix jpegxl-rs version to 0.10.3. Version 0.10.4 does not build on arm64 and
  builds libjxl instead of using the system library.
- Fix memory format mapping for RGBA 32bit float image from image-rs. This fixes
  rendering for a lot of OpenEXR images.
- glycin-heif: Disable bindgen for libheif-rs since it won't build with libheif
  1.19 or newer otherwise.

## 1.1.1 (2024-09-16)

### Fixed

- Glycin failed to detect the SVGZ format since the files were just detected as
  gzip files via the magic bytes.

## 1.1.0 (2024-09-13)

### Fixed

- tests: Update to test image which uses an explicit font name in SVG, not
  depending on the correct default font setting on the system for the test to
  pass.

### Changed

- glycin-utils: Don't use regex feature of env-logger to save almost 1 MB binary
  size in each loader

## 1.1.beta (2024-08-02)

### Added

- Add tests for animations
- Automatically detect if glycin is used inside a Flatpak development
  environment and disable sandbox in that case. Otherwise, flatpak-spawn
  wouldn't use the loaders from the right Flatpak or might not find a installed
  Flatpak at all.
- Capture the stderr and stdout from loaders and editors and included it in the
  new ErrorCtx type that the API now returns

### Fixed

- Also include free swap as free memory in the calculation of how much memory a
  loader can use
- If the fontconfig cache was not up-to-date, rendering SVGs with text would
  fail. There is now a loader config option to enable passing a writable
  fontconfig cache dir into the loader sandbox. This fixes the issue. The cache
  is per loader binary.
- Sealing memfds sometimes fails. Is is solved via retrying the seal until it
  works. In the past this was limited to very short time of retries. The
  interval is now much longer and properly async.
- There was an error in the hardcoded limit for the texture size. The limit is
  now fixed and 8GB as intended.

## 1.1.alpha (2024-06-28)

### Added

- A specific error if no loaders are configured instead of giving an unknown
  format error
- Bindings for C and other languages via GObject Introspection under the name
  libglycin and libglycin-gtk4
- Loaders are now accompanied by editors that can return an image with image
  operations applied
- Option to use tokio throughout instead of async-io
- glycin: List of mime types `glycin::DEFAULT_MIME_TYPES` that the default
  loaders support
- glycin: New loader option to apply transformations like rotate/mirror from
  metadata by default
- loaders: Use specific OutOfMemory error type

### Changed

- glycin: Use a specific error type when no loaders are configured
- jxl: Libjxl version 0.10 is now required
- svg: Use C bindings in SVG loader to reduce binary size

## 1.0.2

- sandbox: Add directories and syscalls needed for fontconfig to work

## 1.0.1

- loaders/utils: Register SIGSYS handler as early as possible for better debugging for unallowed syscalls
- sandbox: Allow membarrier, open, stat syscalls

## 1.0.0

- glycin: Change to stable crate version
- svg: Change to stable rsvg version

## 1.0.rc

- glycin: Allow fstat syscall
- glycin: Treat files detected as XML as SVG if they have .svg file ending #48
- jxl: Allow libjxl 0.10 as well

## 1.0.beta.2

- api: Rename a few functions
- api: Use memfds for larger metadata like Exif or ICC profiles
- glycin/glycin-utils: Drop all uses of anyhow
- glycin/glycin-utils: Use thiserror to define types
- glycin: Check image width and height are not zero
- loaders/image-rs: Disable memory limits since we have our own
- loaders: Use new error utils tracking code location

## 1.0.beta.1

- Update to zbus 4.0

- glycin: Use more fine-tuned memory limits using max 80% available memory

## 1.0.beta

- Consitently use Loader instead of Decoder terminology in code

- glycin/utils: Only use checked math operations
- glycin: Add seccomp filter based on allow list for bwrap sandboxes
- glycin: Attach command line to error messages
- glycin: Clear env when using bwrap sandbox
- glycin: Fix closing an already closed fd
- glycin: Fix race condition in initialization
- glycin: Limit memory usage when using flatpak sandbox
- glycin: Retry sealing an memfd if it fails
- glycin: Use more robust transfer of /lib.. symlinks into sandbox
- jxl: Support Exif
- jxl: Use libjxl instead of jxl-oxide for performance reasons
- loaders: Use isolated install for tests in meson
- utils: Add root cause info to decoding errors

## 1.0.alpha

- Replace async-std with other crates
- Use a new D-Bus API version 1+ allowing for backward compatible extendability

- glycin: Don't allow access to / in bwrap sandbox
- glycin: Limit memory using when using bwrap sandbox
- glycin: Don't block on applying ICC profiles
- glycin: Add tokio feature for when zbus is used with tokio

## 0.1.2

- GIF/APNG/WEBP: Assume frame length of 100ms if provided frame length is zero or invalid

## 0.1.1

- Distribute correct Cargo.lock for glycin-loaders tarballs

## 0.1.0

- Update dependencies

## 0.1.rc

- Update dependencies

## 0.1.beta.4

- Relicense under MPL-2.0 OR LGPL-2.1-or-later
- Add symlinks for license files in crates
- Add cairo dependency for svg loader
- HEIC: Fix filetype detection in config
- tests: Add HEIC tests
- tests: Add option to skip image formats in tests
- tests: Run required install before tests (can be disabled)

## 0.1.beta.3

- Add consitency checks for stride and texture size
- Fix applying ICC profiles to grayscale images
- DDS/ICO: Fixed filetype detection in image-rs
- Fix build on some 32 bit architectures

## 0.1.beta.2

- Use (outdated) librsvg from crates.io instead of git for now

## 0.1.beta.1

- Update dependencies
- Update image-rs to 0.24.7
    * WebP/TIFF: Adds ICC profile support to TIFF and WebP
    * WebP: Fixes frequent decoding issues
- WebP: Use transparent background instead of color suggested by image in
  animations
